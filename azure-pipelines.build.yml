
parameters :
  publish: false

variables:
- template: azure-pipelines.variables.yml

stages:
- stage: build
  pool:
    vmImage: 'windows-latest'

  jobs:
  - job: BuildAndTest 
    strategy:
      matrix:
        linux:
          TargetPlatform: linux-x64
        windows:
          TargetPlatform: win-x64
        osx:
          TargetPlatform: osx-x64
    steps:
    - task: Cache@2
      inputs:
        key: 'nuget | "$(TargetPlatform)" | **/packages.lock.json,!**/bin/**,!**/obj/**'
        path: '$(NUGET_PACKAGES)'
        restoreKeys: |
          nuget | "$(TargetPlatform)"
          nuget
      displayName: Cache Nuget packages
      enabled: false

    - task: UseDotNet@2
      displayName: Use Dot version
      inputs:
        packageType: 'sdk'
        version: '5.x'
        performMultiLevelLookup: true
      enabled: false

    - task: DotNetCoreCLI@2
      displayName: Restore Nuget Packages
      inputs:
        command: 'restore'
        projects: '**/*.sln'
        verbosityRestore: 'Normal'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.sln'
        arguments: '--configuration $(buildConfiguration) /m:4 '
        includeNuGetOrg: true

    - task: VSTest@2
      displayName: Test
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

        
    - task: DotNetCoreCLI@2
      displayName: dotnet publish
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/SabinIO.xEvent.App.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) -r $(TargetPlatform) -p:PublishSingleFile=true -p:SelfContained=true'
        zipAfterPublish: false
        modifyOutputPath: true
      condition: ${{parameters.publish}}

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)
        artifactName: XEventApp$(TargetPlatform)
      condition: ${{parameters.publish}}
      
