
trigger:
- master
variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  NUGET_PACKAGES: $(build.SourcesDirectory)\packages

stages:
- stage: build
  pool:
    vmImage: 'windows-latest'

  jobs:
  - job: BuildAndTest 
    strategy:
      matrix:
        linux:
          TargetPlatform: linux-x64
        windows:
          TargetPlatform: win-x64
        osx:
          TargetPlatform: osx-x64
    steps:
    - task: Cache@2
      inputs:
        key: 'nuget | "$(TargetPlatform)" | **/packages.lock.json,!**/bin/**,!**/obj/**'
        path: '$(NUGET_PACKAGES)'
        restoreKeys: |
          nuget | "$(TargetPlatform)"
          nuget
      displayName: Cache Nuget packages
      enabled: false

    - task: UseDotNet@2
      displayName: Use Dot version
      inputs:
        packageType: 'sdk'
        version: '5.x'
        performMultiLevelLookup: true
      enabled: false

    - task: DotNetCoreCLI@2
      displayName: Restore Nuget Packages
      inputs:
        command: 'restore'
        projects: '**/*.sln'
        verbosityRestore: 'Normal'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.sln'
        arguments: '--configuration $(buildConfiguration) /m:4'
        includeNuGetOrg: true

    - task: VSTest@2
      displayName: Test
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

        
    - task: DotNetCoreCLI@2
      displayName: dotnet publish
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/SabinIO.xEvent.App.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) -r $(TargetPlatform) -p:PublishSingleFile=true -p:SelfContained=true'
        zipAfterPublish: false
        modifyOutputPath: true

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)
        artifactName: XEventApp$(TargetPlatform)

- stage: PublishToGitHub
  condition:  eq(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs: 
  - deployment: PublishGitHubReleaseJob
    environment: sqltest_prod
    strategy:
      runOnce:
        deploy:   
          steps:    
          - download: none
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              targetPath: '$(Build.ArtifactStagingDirectory)'

          - task: GitHubRelease@1
            inputs:
              gitHubConnection: 'GitHub.com'
              repositoryName: '$(Build.Repository.Name)'
              action: 'edit'
              target: '$(Build.SourceVersion)'
              tag: '0.0.1-beta'
              title: 'Beta'
              assets: '$(Build.ArtifactStagingDirectory)/SabinIO.xEvent.App*/*'
              assetUploadMode: 'replace'
              isPreRelease: true
              addChangeLog: false
