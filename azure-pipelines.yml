
trigger:
- master
variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: build
  pool:
    vmImage: 'windows-latest'

  jobs:
  - job: BuildAndTest 
    steps:
    - task: Cache@2
      inputs:
        key: 'nuget | "$(Agent.OS)" | **/packages.lock.json,!**/bin/**,!**/obj/**'
        path: '$(NUGET_PACKAGES)'
        restoreKeys: |
          nuget | "$(Agent.OS)"
          nuget
      displayName: Cache Nuget packages
      
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '5.x'
        performMultiLevelLookup: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.sln'
        verbosityRestore: 'Normal'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.sln'
        arguments: '--configuration $(buildConfiguration) /m:4'
        includeNuGetOrg: true

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

        
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/SabinIO.xEvent.App.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false
        modifyOutputPath: true

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)
        artifactName: XEventApp

- stage: PublishToGitHub
  jobs: 
  - deployment: PublishGitHubReleaseJob
    environment: sqltest_prod
    strategy:
      runOnce:
        deploy:   
          steps:    
          - download: none
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'xEventApp'
              targetPath: '$(Build.ArtifactStagingDirectory)'

          - task: GitHubRelease@1
            inputs:
              gitHubConnection: 'GitHub.com'
              repositoryName: '$(Build.Repository.Name)'
              action: 'edit'
              target: '$(Build.SourceVersion)'
              tag: '0.0.1-beta'
              title: 'Beta'
              assets: '$(Build.ArtifactStagingDirectory)/**/*.exe'
              assetUploadMode: 'replace'
              isPreRelease: true
              addChangeLog: false
